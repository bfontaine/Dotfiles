;; copied from https://github.com/seancorfield/dot-clojure
{:aliases
   {;; pull in specific versions of Clojure:
    :1.6 {:override-deps {org.clojure/clojure {:mvn/version "1.6.0"}}},
    :1.7 {:override-deps {org.clojure/clojure {:mvn/version "1.7.0"}}},
    :1.8 {:override-deps {org.clojure/clojure {:mvn/version "1.8.0"}}},
    :1.9 {:override-deps {org.clojure/clojure {:mvn/version "1.9.0"}}},
    :1.10 {:override-deps {org.clojure/clojure {:mvn/version "1.10.0"}}},
    :1.11 {:override-deps {org.clojure/clojure {:mvn/version "1.11.1"}}},
    :master {:override-deps {org.clojure/clojure {:mvn/version "1.11.1"}}},
    ;; testing and debugging tools:
    :test {:extra-deps {org.clojure/test.check {:mvn/version "RELEASE"}},
           :extra-paths ["test" "src/test/clojure"]},
    ;; see https://github.com/jonase/eastwood#running-eastwood-in-a-repl
    :eastwood {:extra-deps {jonase/eastwood {:mvn/version "RELEASE"}},
               :main-opts ["-m" "eastwood.lint"
                           "{:source-paths,[\"src\"],:test-paths,[\"test\"]}"]},
    ;; - see https://github.com/hugoduncan/criterium/
    ;; - (require '[criterium.core :refer [bench]])
    ;; - (bench (your-expression))
    :bench {:extra-deps {criterium/criterium {:mvn/version "RELEASE"}}},
    ;; - see https://github.com/clojure-goes-fast/clj-memory-meter
    ;; - (require '[clj-memory-meter.core :as mm])
    ;; - (mm/measure (your-expression))
    :measure {:extra-deps {com.clojure-goes-fast/clj-memory-meter
                             {:mvn/version "RELEASE"}}},
    ;; - see https://github.com/Olical/depot
    :outdated {:extra-deps {olical/depot {:mvn/version "RELEASE"}},
               :main-opts ["-m" "depot.outdated.main"]},
    ;; REPL-related tools:
    ;; - start an nREPL server on port 60606:
    :nrepl
      {:extra-deps {nrepl/nrepl {:mvn/version "RELEASE"}},
       :main-opts
         ["-e"
          "(require,'[nrepl.server,:refer,[start-server]]),(start-server,:port,60606)"]},
    :nrepl/old
      {:extra-deps {org.clojure/tools.nrepl {:mvn/version "RELEASE"}},
       :main-opts
         ["-e"
          "(require,'[clojure.tools.nrepl.server,:refer,[start-server]]),(start-server,:port,60606)"]},
    ;; - start a Socket REPL on port 50505:
    :socket
      {:jvm-opts
         ["-Dclojure.server.repl={:port,50505,:accept,clojure.core.server/repl}"]},
    ;; - start a Socket pREPL on port 40404:
    :prepl
      {:jvm-opts
         ["-Dclojure.server.repl={:port,40404,:accept,clojure.core.server/io-prepl}"]},
    ;; - see https://github.com/bhauman/rebel-readline
    ;; - start a Rebel Readline REPL:
    :rebel {:extra-deps {com.bhauman/rebel-readline {:mvn/version "RELEASE"}},
            :main-opts ["-m" "rebel-readline.main"]},
    :deps ; to get access to clojure.tools.deps.alpha.repl/add-lib
      ;; (require '[clojure.tools.deps.alpha.repl :refer [add-lib]])
      ;; (add-lib 'some/library {:mvn/version "RELEASE"})
      {:extra-deps {org.clojure/tools.deps.alpha
                      {:git/url "https://github.com/clojure/tools.deps.alpha",
                       :sha "5140fe0b510f6aeda517711bc6433bef978d6cf6"}}},
    ;; project creation from templates:
    ;; - see https://github.com/seancorfield/clj-new
    ;; - create an application project:
    ;;   - clj -A:new app myname/myapp
    ;;   - cd myapp
    ;;   - clj -m myname.myapp # run it!
    ;;   - clj -A:test:runner # run the tests!
    ;; - create a library project:
    ;;   - clj -A:new lib myname/my-cool-lib
    ;;   - cd my-cool-lib
    ;;   - clj -A:test:runner # run the tests!
    :new {:extra-deps {seancorfield/clj-new {:mvn/version "RELEASE"}},
          :main-opts ["-m" "clj-new.create"]},
    ;; uberjar building:
    ;; - see https://github.com/seancorfield/depstar for a minimalist approach:
    ;;   - clj -A:uberjar result.jar
    ;; - to run it:
    ;;   - java -cp result.jar clojure.main -m mymain.namespace
    ;; - build a library JAR:
    ;;   - clj -A:jar result-lib.jar
    :uberjar {:extra-deps {seancorfield/depstar {:mvn/version "RELEASE"}},
              :main-opts ["-m" "hf.depstar.uberjar"]},
    :jar {:extra-deps {seancorfield/depstar {:mvn/version "RELEASE"}},
          :main-opts ["-m" "hf.depstar.jar"]}},
 :mvn/repos {"io.confluent" {:url "https://packages.confluent.io/maven/"},
             "sonatype"
               {:url
                  "https://oss.sonatype.org/content/repositories/snapshots/"}}}
